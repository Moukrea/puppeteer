name: Build latest Puppeteer image

on:
  schedule:
    - cron: "0 0/12 * * *"
  workflow_dispatch:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  get_latest:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get previous image tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 15.4.0

      - name: Get latest Puppeteer release
        id: puppeteerlatest
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: puppeteer/puppeteer
      - name: Define Puppeteer version environment variable
        run: echo PUPPETEER_LATEST=$(echo "${{ steps.puppeteerlatest.outputs.release }}" | sed 's/v//') >>${GITHUB_ENV}

    outputs:
      latest_tag: ${{ steps.previoustag.outputs.tag }}
      puppeteer_latest: ${{ env.PUPPETEER_LATEST }}

  build:

    if: needs.get_latest.outputs.latest_tag != needs.get_latest.outputs.puppeteer_latest
    needs: get_latest
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:

      - name: Define Puppeteer version environment variable
        run: echo PUPPETEER_LATEST=$(echo "${{ needs.get_latest.outputs.puppeteer_latest }}" | sed 's/v//') >>${GITHUB_ENV}

      # Make sure repository name is set to lowercase
      - name: Change String Case (define string)
        id: string
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ env.IMAGE_NAME }}
      - name: Repository name to lowercase
        run: echo IMAGE_NAME_LC=${{ steps.string.outputs.lowercase }} >>${GITHUB_ENV}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          build-args: PUPPETEER_VERSION=${{ env.PUPPETEER_LATEST }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:${{ env.PUPPETEER_LATEST }},${{ env.IMAGE_NAME_LC }}:latest,${{ env.IMAGE_NAME_LC }}:${{ env.PUPPETEER_LATEST }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}@${{ steps.build-and-push.outputs.digest }}

      - name: Bump version and push tag
        uses: negz/create-tag@v1
        with:
          version: ${{ env.PUPPETEER_LATEST }}
          message: "Bump to Puppeteer ${{ env.PUPPETEER_LATEST }}"
          token: ${{ secrets.GITHUB_TOKEN }}